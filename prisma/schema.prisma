generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  fullName  String
  password  String
  role      UserRole
  isDeleted Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  dailyReports DailyReport[]
}

model DailyReport {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  note      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model PortfolioData {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  date            String // YYYY-MM-DD
  minuteKey       String // YYYY-MM-DD-HH-MM
  lastUpdated     String // ISO timestamp
  startingNav     Float
  endingNav       Float
  growthPercent   Float
  dailyReportText String
  systemStatus    String // JSON string
  visualFlags     String // JSON string
  teamNotes       String // JSON string
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([date, minuteKey])
  @@index([minuteKey])
}

model Allocation {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  key               String // A, B, C
  name              String
  date              String // YYYY-MM-DD
  currentBalance    Float // Current balance (replaces endingBalance)
  history           String // JSON array of AllocationHistory
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  AllocationHistory AllocationHistory[]

  @@unique([key])
  @@index([date])
}

model AllocationHistory {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  allocationId      String     @db.ObjectId
  allocation        Allocation @relation(fields: [allocationId], references: [id])
  minuteKey         String // YYYY-MM-DD-HH-MM
  startingBalance   Float
  minuteGain        Float
  minuteGainPercent Float
  endingBalance     Float
  notes             String
  createdAt         DateTime   @default(now())

  @@index([minuteKey])
  @@index([allocationId])
}

model AssetPerformance {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  symbol        String // BTC, ETH, etc.
  open          Float
  close         Float
  changePercent Float
  volumeUsd     Float
  date          String
  minuteKey     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([minuteKey])
}

model ChartData {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      String
  nav       Float
  datetime  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SystemStatusLog {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  date               String
  minuteKey          String
  routingActive      Boolean  @default(true)
  hedgingEngaged     Boolean  @default(false)
  smartLayerUnlocked Boolean  @default(true)
  dashboardBetaMode  Boolean  @default(true)
  lastSyncSuccess    Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([minuteKey])
}
